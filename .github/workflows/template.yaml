name: Terraform Deployment with Sync

on:
  push:
    branches:
      - none  # Trigger on push to main branch
  workflow_dispatch:
    inputs:
      resourcetype:
        description: 'resourcetype to deploy (e.g., VM, Webapp)'
        required: true

jobs:
  terraform-deployment:
    runs-on: ubuntu-latest

    env:
      TF_WORKING_DIR: ${{ github.workspace }}/${{ github.event.inputs.resourcetype }}  # Correct working directory
      TF_VERSION: '1.3.5'  # Specify the Terraform version

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: List the contents of the working directory (for debugging)
    - name: List Working Directory
      run: |
        echo "Listing the contents of the working directory..."
        ls -al $GITHUB_WORKSPACE

    # Step 3: Install Terraform
    - name: Install Terraform ${{ env.TF_VERSION }}
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TF_VERSION }}

    # Step 4: Initialize Terraform
    - name: Terraform Init
      run: |
        echo "Initializing Terraform..."
        terraform -chdir=${{ env.TF_WORKING_DIR }} init -upgrade

    # Step 5: Sync Terraform configurations or modules
    - name: Sync Terraform Configurations
      run: |
        echo "Syncing Terraform configurations..."
        terraform -chdir=${{ env.TF_WORKING_DIR }} validate  # Validate if the configuration is correct
        terraform -chdir=${{ env.TF_WORKING_DIR }} plan -out=tfplan  # Generate an execution plan
        #terraform -chdir=${{ env.TF_WORKING_DIR }} apply -auto-approve tfplan  # Apply the changes

    # Step 6: Commit the changes (optional)
    - name: Commit Terraform Plan Output (Optional)
      run: |
        git config --global user.name "sivalakshmimettu"
        git config --global user.email "sivalakshmimettu@github.com"
        git add .
        git commit -m "Apply Terraform changes"
        git status
        git log -n 1  # Check the last commit details

    # Step 7: Push the changes
    - name: Push Changes
      run: |
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
        git push
