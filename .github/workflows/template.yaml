name: Terraform Deployment with Checkov

on:
  push:
    branches:
      - none  # Trigger on push to main branch
  workflow_dispatch:
    inputs:
      resourcetype:
        description: 'resourcetype to deploy (e.g., VM, Webapp)'
        required: true

jobs:
  terraform-deployment:
    runs-on: ubuntu-latest

    env:
      TF_WORKING_DIR: ${{ github.workspace }}/${{ github.event.inputs.resourcetype }}  # Correct working directory
      TF_VERSION: '1.3.5'  # Specify the Terraform version

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: List the contents of the working directory (for debugging)
    - name: List Working Directory Before
      run: |
        echo "Listing the contents of the working directory before Checkov..."
        ls -al $GITHUB_WORKSPACE

    # Step 3: Install Terraform
    - name: Install Terraform ${{ env.TF_VERSION }}
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TF_VERSION }}

    # Step 4: Initialize Terraform
    - name: Terraform Init
      run: |
        echo "Initializing Terraform..."
        terraform -chdir=${{ env.TF_WORKING_DIR }} init -upgrade

    # Step 5: Run Checkov for Terraform code security analysis and save output to a file
    - name: Run Checkov on Terraform code
      run: |
        echo "Running Checkov for security analysis on Terraform configuration..."
        pip install checkov  # Install Checkov
        checkov -d ${{ env.TF_WORKING_DIR }} | tee ${{ github.workspace }}/checkov_output.txt  # Save output to file

    # Step 6: List files after Checkov output is saved
    - name: List Working Directory After Checkov
      run: |
        echo "Listing the contents of the working directory after Checkov..."
        ls -al $GITHUB_WORKSPACE

    # Step 7: Commit the Checkov output to the repository (if desired)
    - name: Commit Checkov Output
      run: |
        git config --global user.name "sivalakshmimettu"
        git config --global user.email "sivalakshmimettu@github.com"
        git add checkov_output.txt
        git commit -m "Add Checkov output for Terraform security analysis"
        git status
        git log -n 1  # Check the last commit details
        git push

    # Step 8: List files after git push
    - name: List Files After Commit and Push
      run: |
        echo "Listing files after git push..."
        ls -al $GITHUB_WORKSPACE

    # Step 9: Validate Terraform configuration
    - name: Terraform Validate
      run: |
        echo "Validating Terraform configuration..."
        terraform -chdir=${{ env.TF_WORKING_DIR }} validate

    # Step 10: Terraform Plan with environment-specific variables
    - name: Terraform Plan
      run: |
        echo "Running Terraform Plan with environment-specific tfvars..."
        ENV_TFVARS="${{ github.event.inputs.resourcetype }}/terraform.tfvars"
        echo "Using environment-specific tfvars file: ${ENV_TFVARS}"
    
        # Run Terraform Plan with the correct path to tfvars file
        terraform -chdir=${{ env.TF_WORKING_DIR }} plan -out=tfplan -var-file=${{ github.workspace }}/${ENV_TFVARS}

    # Step 11: Remove terraform.lock.hcl file after applying (for clean-up)
    - name: Remove terraform.lock.hcl
      run: |
        echo "Removing terraform.lock.hcl after applying..."
        rm -f ${{ env.TF_WORKING_DIR }}/terraform.lock.hcl
