name: Terraform Deployment with Checkov

on:
  push:
    branches:
      - none  # Trigger on push to main branch
  workflow_dispatch:
    inputs:
      resourcetype:
        description: 'resourcetype to deploy (e.g., VM, Webapp)'
        required: true

jobs:
  terraform-deployment:
    runs-on: ubuntu-latest

    env:
      TF_WORKING_DIR: ${{ github.workspace }}/${{ github.event.inputs.resourcetype }}  # Correct working directory
      TF_VERSION: '1.3.5'  # Specify the Terraform version
      BUILD_NUMBER: ${{ github.run_id }}  # Use GitHub's run ID as the build number

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: List the contents of the working directory (for debugging)
    - name: List Working Directory
      run: |
        echo "Listing the contents of the working directory..."
        ls -al $GITHUB_WORKSPACE
        echo "Listing contents of the expected Terraform directory..."
        ls -al ${{ github.workspace }}/${{ github.event.inputs.resourcetype }}

    # Step 3: Install Terraform
    - name: Install Terraform ${{ env.TF_VERSION }}
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TF_VERSION }}

    # Step 4: Initialize Terraform
    - name: Terraform Init
      run: |
        echo "Initializing Terraform..."
        terraform -chdir=${{ env.TF_WORKING_DIR }} init -upgrade

    # Step 5: Run Checkov for Terraform code security analysis
    - name: Run Checkov on Terraform code
      continue-on-error: true  # Allow Checkov to continue even if it fails
      run: |
        echo "Running Checkov for security analysis on Terraform configuration..."
        pip install checkov  # Install Checkov
        BUILD_NUMBER=${{ github.run_id }}
        checkov -d ${{ env.TF_WORKING_DIR }} -o json > "checkov_output_${BUILD_NUMBER}.json"
        
        # Save the Checkov output file before continuing
        cp "checkov_output_${BUILD_NUMBER}.json" ${{ github.workspace }}/checkov_output_${BUILD_NUMBER}.json
        echo "Checkov output saved to the repository successfully."

    # Step 6: Copy Checkov output file into the repository (before validate)
    - name: Copy Checkov output to the repository
      run: |
        echo "Copying Checkov output file to the repository..."
        cp "checkov_output_${{ env.BUILD_NUMBER }}.json" ${{ github.workspace }}/checkov_output_${{ env.BUILD_NUMBER }}.json

    # Step 7: Validate Terraform configuration
    - name: Terraform Validate
      run: |
        echo "Validating Terraform configuration..."
        terraform -chdir=${{ env.TF_WORKING_DIR }} validate

    # Step 8: Terraform Plan with environment-specific variables
    - name: Terraform Plan
      run: |
        echo "Running Terraform Plan with environment-specific tfvars..."
        ENV_TFVARS="${{ github.e
